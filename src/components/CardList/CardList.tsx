import React, { ReactNode, ReactElement, useState, useCallback, useEffect } from 'react';
import Card from './Card';
import type { CardProps } from './Card';
import { Balance } from './Balance';
import { Icon } from './Icon';
import './CardList.css';

export interface CardItem {
  id: string;
  balance?: number;
  icon?: string;
}

export interface CardListProps {
  id?: string;
  cardItems?: CardItem[];
  children?: React.ReactNode;
  className?: string;
  onSelectCard?: (cardId: string) => void;
  detailLevel?: number; // –£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç 0 –¥–æ 4
}

export const isCard = (element: ReactElement): element is ReactElement<CardProps> => {
  return element.type === Card;
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç CardList - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
 * 
 * @param {string} id - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {CardItem[]} cardItems - –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
 * @param {React.ReactNode} children - –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫)
 * @param {string} className - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã
 * @param {function} onSelectCard - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ä—Ç–æ—á–∫–∏
 * @param {number} detailLevel - –£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (0-4)
 * 
 * –£—Ä–æ–≤–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:
 * 0: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π - —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
 * 1: –ë–∞–∑–æ–≤—ã–π - –ø—Ä–æ—Å—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–ª—å–∫–æ —Å id
 * 2: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ —Å ID –∫–∞–∫ children
 * 3: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π
 * 4: –ü–æ–ª–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ Balance –∏ Icon
 */
const CardList: React.FC<CardListProps> = ({ 
  id, 
  cardItems, 
  children, 
  className = '',
  onSelectCard,
  detailLevel = 2 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
}) => {
  const [selectedCardId, setSelectedCardId] = useState<string | undefined>();
  
  useEffect(() => {
    console.log('CardList —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω', { id, cardItems, detailLevel });
  }, [id, cardItems, detailLevel]);

  // –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const cardListStyles = {
    display: 'flex',
    flexDirection: 'column' as const,
    gap: '10px',
    padding: '15px',
    borderRadius: '8px',
    backgroundColor: '#333',
    color: 'white',
    width: '100%',
    minHeight: '100px'
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
  const handleCardClick = useCallback((cardId?: string) => {
    console.log('–ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ', cardId);
    if (cardId) {
      setSelectedCardId(cardId);
      if (onSelectCard) {
        onSelectCard(cardId);
      }
    }
  }, [onSelectCard]);

  // –£—Ä–æ–≤–µ–Ω—å 0: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π - —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  if (detailLevel === 0) {
    return (
      <div 
        className={`card-list ${className}`} 
        id={id || 'card-list'}
        style={cardListStyles}
        data-detail-level={detailLevel}
      >
        <div className="detail-level-indicator">
          –£—Ä–æ–≤–µ–Ω—å: {detailLevel}
        </div>
        <div style={{ textAlign: 'center', padding: '20px', color: '#aaa' }}>
          –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫
        </div>
      </div>
    );
  }

  // –£—Ä–æ–≤–µ–Ω—å 1: –ë–∞–∑–æ–≤—ã–π - –ø—Ä–æ—Å—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–ª—å–∫–æ —Å id
  if (detailLevel === 1) {
    const items = cardItems || [
      { id: 'card-1' },
      { id: 'card-2' },
      { id: 'card-3' }
    ];
    
    return (
      <div 
        className={`card-list ${className}`} 
        id={id || 'card-list'}
        style={cardListStyles}
        data-detail-level={detailLevel}
      >
        <div className="detail-level-indicator">
          –£—Ä–æ–≤–µ–Ω—å: {detailLevel}
        </div>
        <div style={{ marginBottom: '10px', color: '#aaa' }}>
          –ö–∞—Ä—Ç–æ—á–µ–∫: {items.length}
        </div>
        {items.map((item) => (
          <Card 
            key={item.id} 
            id={item.id} 
            onClick={handleCardClick}
          />
        ))}
      </div>
    );
  }

  // –£—Ä–æ–≤–µ–Ω—å 2: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ c children –≤ –≤–∏–¥–µ Card —Å id
  if (detailLevel === 2) {
    const defaultCards = (
      <>
        <Card id="card-1" />
        <Card id="card-2" />
        <Card id="card-3" />
      </>
    );
    
    return (
      <div 
        className={`card-list ${className}`} 
        id={id || 'card-list'}
        style={cardListStyles}
        data-detail-level={detailLevel}
      >
        <div className="detail-level-indicator">
          –£—Ä–æ–≤–µ–Ω—å: {detailLevel}
        </div>
        <div style={{ marginBottom: '10px', color: '#aaa' }}>
          –ö–∞—Ä—Ç–æ—á–µ–∫: {React.Children.count(children) || 3}
        </div>
        {children || defaultCards}
      </div>
    );
  }

  // –£—Ä–æ–≤–µ–Ω—å 3: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π
  if (detailLevel === 3) {
    const items = cardItems || [
      { id: 'card-1', balance: 5000, icon: 'üí∞' },
      { id: 'card-2', balance: 7500, icon: 'üí≥' },
      { id: 'card-3', balance: 12000, icon: 'üè¶' }
    ];
    
    return (
      <div 
        className={`card-list ${className}`} 
        id={id || 'card-list'}
        style={cardListStyles}
        data-detail-level={detailLevel}
      >
        <div className="detail-level-indicator">
          –£—Ä–æ–≤–µ–Ω—å: {detailLevel}
        </div>
        <div style={{ marginBottom: '10px', color: '#aaa' }}>
          –ö–∞—Ä—Ç–æ—á–µ–∫: {items.length}
        </div>
        {items.map((item) => (
          <Card 
            key={item.id} 
            id={item.id} 
            balance={item.balance} 
            icon={item.icon}
            onClick={handleCardClick}
          />
        ))}
      </div>
    );
  }

  // –£—Ä–æ–≤–µ–Ω—å 4: –ü–æ–ª–Ω—ã–π - –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
  if (detailLevel === 4) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—Ä–∞–Ω–µ–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Balance –∏ Icon
    return (
      <div 
        className={`card-list ${className}`} 
        id={id || 'card-list'}
        style={cardListStyles}
        data-detail-level={detailLevel}
      >
        <div className="detail-level-indicator">
          –£—Ä–æ–≤–µ–Ω—å: {detailLevel}
        </div>
        <div style={{ marginBottom: '10px', color: '#aaa' }}>
          –ö–∞—Ä—Ç–æ—á–µ–∫: {3}
        </div>
        <Card id="custom-1" onClick={handleCardClick}>
          <div className="custom-card-content">
            <Balance value={8500} />
            <Icon name="üí∞" />
            <div className="card-details">
              <div className="card-title">–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç</div>
              <div className="card-subtitle">–î–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞</div>
            </div>
          </div>
        </Card>
        <Card id="custom-2" onClick={handleCardClick}>
          <div className="custom-card-content">
            <Balance value={15000} />
            <Icon name="üí≥" />
            <div className="card-details">
              <div className="card-title">–ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Å—á–µ—Ç</div>
              <div className="card-subtitle">–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –ª–∏–Ω–∏—è</div>
            </div>
          </div>
        </Card>
        <Card id="custom-3" onClick={handleCardClick}>
          <div className="custom-card-content">
            <Balance value={3000} />
            <Icon name="üè¶" />
            <div className="card-details">
              <div className="card-title">–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç</div>
              <div className="card-subtitle">–°–±–µ—Ä–µ–∂–µ–Ω–∏—è</div>
            </div>
          </div>
        </Card>
      </div>
    );
  }
  
  // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å 2
  console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Ä–æ–≤–µ–Ω—å 2');
  return (
    <div 
      className={`card-list ${className}`} 
      id={id || 'card-list'}
      style={cardListStyles}
      data-detail-level={2}
    >
      <div className="detail-level-indicator">
        –£—Ä–æ–≤–µ–Ω—å: 2 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
      </div>
      <div style={{ marginBottom: '10px', color: '#aaa' }}>
        –ö–∞—Ä—Ç–æ—á–µ–∫: {React.Children.count(children) || 3}
      </div>
      {children || (
        <>
          <Card id="card-1" onClick={handleCardClick} />
          <Card id="card-2" onClick={handleCardClick} />
          <Card id="card-3" onClick={handleCardClick} />
        </>
      )}
    </div>
  );
};

export { Card };
export default CardList; 