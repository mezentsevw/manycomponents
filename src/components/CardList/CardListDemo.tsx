import React, { useState, useEffect } from 'react';
import CardList from './CardList';
import './CardList.css';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è CardList, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
 */
export const CardListDemo: React.FC = () => {
  const [selectedCardId, setSelectedCardId] = useState<string | undefined>();
  const [detailLevel, setDetailLevel] = useState<number>(2); // –ù–∞—á–∏–Ω–∞–µ–º —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è

  useEffect(() => { 
    console.log('CardListDemo –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:', detailLevel);
    return () => {
      console.log('CardListDemo –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
    };
  }, [detailLevel]);

  // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
  const demoCards = [
    { id: '1', balance: 5000, icon: 'üí∞' },
    { id: '2', balance: 7500, icon: 'üí≥' },
    { id: '3', balance: 12000, icon: 'üè¶' },
    { id: '4', balance: 9000, icon: 'üíµ' },
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
  const handleCardSelect = (cardId: string) => {
    setSelectedCardId(cardId);
    console.log(`–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ —Å ID: ${cardId}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
  const handleDetailLevelChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newLevel = parseInt(e.target.value, 10);
    setDetailLevel(newLevel);
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
  const getDetailLevelText = () => {
    switch (detailLevel) {
      case 0: return '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π';
      case 1: return '–ë–∞–∑–æ–≤—ã–π';
      case 2: return '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π';
      case 3: return '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π';
      case 4: return '–ü–æ–ª–Ω—ã–π';
      default: return '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π';
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
  const getDetailLevelCode = () => {
    switch (detailLevel) {
      case 0:
        return "<CardList id=\"my-card-list\" />";
      case 1:
        return "<CardList cardItems={[{ id: \"1\" }, { id: \"2\" }]} />";
      case 2:
        return "<CardList>\n  <Card id=\"card-1\" />\n  <Card id=\"card-2\" />\n</CardList>";
      case 3:
        return "<CardList cardItems={[{ id: \"1\", balance: 5000, icon: \"üí∞\" }]} />";
      case 4:
        return "<CardList>\n  <Card id=\"card-1\">\n    <Balance value={8500} />\n    <Icon name=\"üí∞\" />\n  </Card>\n</CardList>";
      default:
        return "<CardList />";
    }
  };

  return (
    <div className="card-list-demo">
      <h2>–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è CardList</h2>
      
      {/* –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */}
      <div className="component-description" style={{ 
        background: 'rgba(0, 0, 0, 0.2)', 
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</h3>
        <p>
          <strong>CardList</strong> - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫. –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
          –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –∫–∞—Ä—Ç, —Å—á–µ—Ç–æ–≤, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–ª–∏ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        </p>
        <h4 style={{ margin: '15px 0 5px 0' }}>–ê—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞ –≤—Ö–æ–¥:</h4>
        <ul style={{ margin: '0 0 10px 0', paddingLeft: '20px' }}>
          <li><code>id?: string</code> - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</li>
          <li><code>cardItems?: CardItem[]</code> - –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫</li>
          <li><code>children?: React.ReactNode</code> - –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã</li>
          <li><code>className?: string</code> - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã</li>
          <li><code>onSelectCard?: (cardId: string) =&gt; void</code> - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–æ—á–∫–∏</li>
          <li><code>detailLevel?: number</code> - —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (0-4)</li>
        </ul>
        <h4 style={{ margin: '15px 0 5px 0' }}>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ LLM:</h4>
        <p>
          –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤—ã–±–æ—Ä–∞ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.
          –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è - –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ
          —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.
        </p>
      </div>

      {/* –ü–æ–ª–∑—É–Ω–æ–∫ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ */}
      <div className="detail-slider-container">
        <div className="detail-slider-label">
          <span>–£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: <span className="detail-level">{getDetailLevelText()}</span></span>
          <span>{detailLevel}/4</span>
        </div>
        <input
          type="range"
          min="0"
          max="4"
          step="1"
          value={detailLevel}
          onChange={handleDetailLevelChange}
          className="detail-slider"
        />
      </div>

      {/* –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è */}
      <div style={{ 
        background: 'rgba(0, 0, 0, 0.3)', 
        padding: '15px',
        borderRadius: '8px',
        marginTop: '15px',
        fontFamily: 'monospace',
        whiteSpace: 'pre'
      }}>
        <div style={{ marginBottom: '5px', fontSize: '14px', color: '#aaa' }}>
          –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è {detailLevel}:
        </div>
        {getDetailLevelCode()}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ */}
      {selectedCardId && (
        <div className="selected-card-info">
          <div className="selected-card-badge">
            –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞: <span className="selected-card-id">{selectedCardId}</span>
          </div>
          <button 
            className="clear-selection"
            onClick={() => setSelectedCardId(undefined)}
          >
            –°–±—Ä–æ—Å–∏—Ç—å –≤—ã–±–æ—Ä
          </button>
        </div>
      )}

      {/* –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è */}
      <div style={{ 
        background: 'rgba(0, 0, 0, 0.2)', 
        padding: '10px', 
        margin: '15px 0', 
        borderRadius: '4px' 
      }}>
        –£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: {detailLevel} ({getDetailLevelText()}), –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞: {selectedCardId || '–Ω–µ—Ç'}
      </div>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Ç–µ–∫—É—â–∏–º —É—Ä–æ–≤–Ω–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ */}
      <div className="card-list-demo-container">
        <div className="card-list-demo-item">
          <h3>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —É—Ä–æ–≤–Ω–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ {detailLevel}</h3>
          <div className="card-list-wrapper">
            <CardList 
              cardItems={demoCards} 
              onSelectCard={handleCardSelect} 
              detailLevel={detailLevel} 
            />
          </div>
        </div>
      </div>
    </div>
  );
}; 